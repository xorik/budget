env:
  browser: true
  es6: true

extends:
  - 'eslint:recommended'
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
  - 'plugin:vue/essential'
  - '@vue/typescript/recommended'
  - '@vue/prettier'
  - '@vue/prettier/@typescript-eslint'
  - 'plugin:import/typescript'

globals:
  Atomics: readonly
  SharedArrayBuffer: readonly

parserOptions:
  parser: '@typescript-eslint/parser'
  ecmaVersion: 2018
  sourceType: module
  project: ./tsconfig.json

plugins:
  - '@typescript-eslint'
  - import

rules:
  indent: [error, 2]
  linebreak-style: [error, unix]
  quotes: [error, single]
  semi: [error, never]

  # https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin#supported-rules
  '@typescript-eslint/member-delimiter-style':
    - error
    - { multiline: { delimiter: none } }

  '@typescript-eslint/explicit-function-return-type': [error]
  '@typescript-eslint/adjacent-overload-signatures': [error]
  '@typescript-eslint/await-thenable': [error]
  '@typescript-eslint/no-inferrable-types': [error]
  '@typescript-eslint/type-annotation-spacing': [error]

  # https://github.com/benmosher/eslint-plugin-import
  'import/no-default-export': [error]
  'import/export': [error]
  'import/no-mutable-exports': [error]
  'import/first': [error]
  'import/exports-last': [error]
  'import/no-duplicates': [error]
  'import/newline-after-import': [error]
  'import/group-exports': [error]
  'import/order':
    - error
    - newlines-between: always
      groups:
        - [builtin, external]
        - [parent, sibling, index]
      alphabetize: { order: asc, caseInsensitive: true }

  'import/no-useless-path-segments':
    - error
    - { noUselessIndex: true }

  'import/no-restricted-paths':
    - error
    - zones:
        # Independent _common
        - { target: _common, from: front }
        - { target: _common, from: back }
        # Independent front <=> back
        - { target: back, from: front }
        - { target: front, from: back }
        # DDD
        - { target: back/src/domain, from: back/src/application }
        - { target: back/src/domain, from: back/src/infrastructure }
        - { target: back/src/infrastructure, from: back/src/application }
